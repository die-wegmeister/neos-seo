prototype(Neos.Seo:AlternateLanguageLinks) < prototype(Neos.Fusion:Component) {
    @if.onlyRenderWhenInLiveWorkspace = ${Neos.Node.isLive(this.node)}
    @if.languageDimensionExists = ${this.defaultDimensionValue}
    @if.hasNoForeignCanonical = ${String.isBlank(q(this.node).property('canonicalLink'))}

    node = ${documentNode}
    dimension = 'language'
    defaultDimensionValue = ${Neos.Dimension.findDefaultValue(this.node, this.dimension)}
    excludedPresets = ${[]}

    # The hreflang value needs to have a format like 'en-US', therefore internally used values
    # like 'en_US' will be modified to match.
    dimensionValueSeparator = '_'

    renderer = Neos.Fusion:Loop {
        items = ${Neos.Dimension.findVariantsInDimension(props.node, props.dimension)}
        itemName = 'alternateLanguageNode'
        itemRenderer = Neos.Fusion:Component {
            @if.indexingAllowed = ${q(alternateLanguageNode).property('metaRobotsNoindex') != true}
            @if.notExcluded = ${!props.excludedPresets || Array.indexOf(props.excludedPresets, this.dimensionValue) == -1}

            node = ${alternateLanguageNode}
            dimensionValue = ${Neos.Dimension.currentValue(alternateLanguageNode, props.dimension)}
            defaultDimensionValue = ${props.defaultDimensionValue}
            dimensionValueSeparator = ${props.dimensionValueSeparator}

            renderer = afx`
                <Neos.Seo:AlternateLanguageLink @key="defaultLink" node={props.node} hreflang="x-default"
                    @if.isDefaultLocale={props.defaultDimensionValue == props.dimensionValue}/>
                <Neos.Seo:AlternateLanguageLink node={props.node}
                    hreflang={String.replace(props.dimensionValue, props.dimensionValueSeparator, '-')}/>
            `
        }
    }
}
